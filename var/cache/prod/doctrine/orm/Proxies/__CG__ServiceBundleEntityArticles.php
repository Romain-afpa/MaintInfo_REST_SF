<?php

namespace Proxies\__CG__\ServiceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Articles extends \ServiceBundle\Entity\Articles implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'idArticle', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'desart', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'stockart', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'seuilmin', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'encommande', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'enrepa', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'prixart', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'delaireappro', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'consomoy', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'fabriquant'];
        }

        return ['__isInitialized__', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'idArticle', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'desart', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'stockart', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'seuilmin', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'encommande', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'enrepa', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'prixart', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'delaireappro', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'consomoy', '' . "\0" . 'ServiceBundle\\Entity\\Articles' . "\0" . 'fabriquant'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Articles $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdArticle()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdArticle();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdArticle', []);

        return parent::getIdArticle();
    }

    /**
     * {@inheritDoc}
     */
    public function setDesart($desart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDesart', [$desart]);

        return parent::setDesart($desart);
    }

    /**
     * {@inheritDoc}
     */
    public function getDesart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDesart', []);

        return parent::getDesart();
    }

    /**
     * {@inheritDoc}
     */
    public function setStockart($stockart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStockart', [$stockart]);

        return parent::setStockart($stockart);
    }

    /**
     * {@inheritDoc}
     */
    public function getStockart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockart', []);

        return parent::getStockart();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeuilmin($seuilmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeuilmin', [$seuilmin]);

        return parent::setSeuilmin($seuilmin);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeuilmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeuilmin', []);

        return parent::getSeuilmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setEncommande($encommande)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEncommande', [$encommande]);

        return parent::setEncommande($encommande);
    }

    /**
     * {@inheritDoc}
     */
    public function getEncommande()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEncommande', []);

        return parent::getEncommande();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnrepa($enrepa)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnrepa', [$enrepa]);

        return parent::setEnrepa($enrepa);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnrepa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnrepa', []);

        return parent::getEnrepa();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrixart($prixart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrixart', [$prixart]);

        return parent::setPrixart($prixart);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrixart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrixart', []);

        return parent::getPrixart();
    }

    /**
     * {@inheritDoc}
     */
    public function setDelaireappro($delaireappro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDelaireappro', [$delaireappro]);

        return parent::setDelaireappro($delaireappro);
    }

    /**
     * {@inheritDoc}
     */
    public function getDelaireappro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDelaireappro', []);

        return parent::getDelaireappro();
    }

    /**
     * {@inheritDoc}
     */
    public function setConsomoy($consomoy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConsomoy', [$consomoy]);

        return parent::setConsomoy($consomoy);
    }

    /**
     * {@inheritDoc}
     */
    public function getConsomoy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsomoy', []);

        return parent::getConsomoy();
    }

    /**
     * {@inheritDoc}
     */
    public function setFabriquant($fabriquant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFabriquant', [$fabriquant]);

        return parent::setFabriquant($fabriquant);
    }

    /**
     * {@inheritDoc}
     */
    public function getFabriquant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFabriquant', []);

        return parent::getFabriquant();
    }

}
